{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\torjm\\\\OneDrive\\\\Bureau\\\\project\\\\reactproject\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css'; // Assuming you put your styles in App.css\nimport { Link, Route, Routes } from 'react-router-dom';\nimport NewCustomer from './newCustomer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const showTab = tabId => {\n    const tabContents = document.querySelectorAll('.tab-content');\n    for (let content of tabContents) {\n      content.classList.remove('active');\n    }\n    document.getElementById(tabId).classList.add('active');\n  };\n  function getOldCustomerData() {\n    const customerId = document.getElementById('customerId').value;\n    fetch('http://localhost:5000/predict', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cust_id: customerId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        alert(\"Error: \" + data.error);\n      } else {\n        document.getElementById('results').value = \"Cluster for customer with ID \" + customerId + \": \" + data.cluster;\n      }\n    });\n  }\n  const handleSaveToCSV = () => {\n    // Get table data from form\n    const tableRows = document.querySelectorAll('#newCustomer tbody tr');\n    const data = Array.from(tableRows).map(row => {\n      const inputs = row.querySelectorAll('input');\n      return Array.from(inputs).map(input => input.value);\n    });\n\n    // Convert data to a format suitable for sending to server\n    const columns = ['CUST_ID', 'BALANCE', 'BALANCE_FREQUENCY', 'PURCHASES', 'ONEOFF_PURCHASES', 'INSTALLMENTS_PURCHASES', 'CASH_ADVANCE', 'PURCHASES_FREQUENCY', 'ONEOFF_PURCHASES_FREQUENCY', 'PURCHASES_INSTALLMENTS_FREQUENCY', 'CASH_ADVANCE_FREQUENCY', 'CASH_ADVANCE_TRX', 'PURCHASES_TRX', 'CREDIT_LIMIT', 'TENURE'];\n    const payload = data.map(row => {\n      const obj = {};\n      row.forEach((value, index) => {\n        obj[columns[index]] = value;\n      });\n      return obj;\n    });\n\n    // Send data to Flask backend\n    fetch(\"http://localhost:5000/save-csv\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload[0]) // send the first row for simplicity\n    }).then(response => response.json()).then(data => {\n      // Set the received data into the textarea\n      document.getElementById('results1').value = \"Cluster for customer with ID \" + data.cust_id + \": \" + data.cluster;\n      console.log(data.message);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  /*\n  const handleSaveToCSV = () => {\n      // Get table data from form\n      const tableRows = document.querySelectorAll('#newCustomer tbody tr');\n      const data = Array.from(tableRows).map(row => {\n          const inputs = row.querySelectorAll('input');\n          return Array.from(inputs).map(input => input.value);\n      });\n  \n      // Convert data to a format suitable for sending to server\n      const columns = ['CUST_ID', 'BALANCE', 'BALANCE_FREQUENCY', 'PURCHASES',\n                       'ONEOFF_PURCHASES', 'INSTALLMENTS_PURCHASES', 'CASH_ADVANCE',\n                       'PURCHASES_FREQUENCY', 'ONEOFF_PURCHASES_FREQUENCY',\n                       'PURCHASES_INSTALLMENTS_FREQUENCY', 'CASH_ADVANCE_FREQUENCY',\n                       'CASH_ADVANCE_TRX', 'PURCHASES_TRX', 'CREDIT_LIMIT','TENURE'];\n      const payload = data.map(row => {\n          const obj = {};\n          row.forEach((value, index) => {\n              obj[columns[index]] = value;\n          });\n          return obj;\n      });\n  \n      // Send data to Flask backend\n      fetch(\"http://localhost:5000/save-csv\", {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),  // send all rows\n      })\n      .then(response => response.json())\n      .then(data => {\n          // Set the received data into the textarea\n          // For simplicity, setting only the first result. \n          // If server returns multiple results, you can loop through them.\n          document.getElementById('results1').value = data.cluster;\n  \n          console.log(data.message);\n      })\n      .catch((error) => {\n          console.error('Error:', error);\n      });\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      class: \"navbar navbar-expand-lg navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"navbar-brand\",\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + '/images/axefinance.png',\n            alt: \"\",\n            width: \"85\",\n            height: \"45\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"navbar-toggler\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#navbarNav\",\n          \"aria-controls\": \"navbarNav\",\n          \"aria-expanded\": \"false\",\n          \"aria-label\": \"Toggle navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"navbar-toggler-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"collapse navbar-collapse\",\n          id: \"navbarNav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"navbar-nav\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"nav-link active\",\n                \"aria-current\": \"page\",\n                href: \"#\",\n                children: \"Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"newCustomer\",\n                class: \"nav-link\",\n                children: \"New Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"nav-link\",\n                onClick: () => showTab('oldCustomer'),\n                children: \"Old Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(NewCustomer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newCustomer\",\n        element: /*#__PURE__*/_jsxDEV(NewCustomer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/oldCustomer\",\n        element: /*#__PURE__*/_jsxDEV(OldCustomer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"oldCustomer\",\n      className: \"tab-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"customerId\",\n        children: \"Customer ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"customerId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          readOnly: true,\n          id: \"results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getOldCustomerData,\n          children: \"Fetch Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Link","Route","Routes","NewCustomer","jsxDEV","_jsxDEV","App","showTab","tabId","tabContents","document","querySelectorAll","content","classList","remove","getElementById","add","getOldCustomerData","customerId","value","fetch","method","headers","body","JSON","stringify","cust_id","then","response","json","data","error","alert","cluster","handleSaveToCSV","tableRows","Array","from","map","row","inputs","input","columns","payload","obj","forEach","index","console","log","message","catch","className","children","class","href","src","process","env","PUBLIC_URL","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","type","id","to","onClick","path","element","OldCustomer","htmlFor","readOnly","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/torjm/OneDrive/Bureau/project/reactproject/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';  // Assuming you put your styles in App.css\nimport { Link, Route, Routes } from 'react-router-dom';\nimport NewCustomer from './newCustomer';\n\nfunction App() {\n  const showTab = (tabId) => {\n    const tabContents = document.querySelectorAll('.tab-content');\n    for (let content of tabContents) {\n        content.classList.remove('active');\n    }\n    document.getElementById(tabId).classList.add('active');\n  }\n\n  function getOldCustomerData() {\n    const customerId = document.getElementById('customerId').value;\n\n    fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({cust_id: customerId})\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.error) {\n            alert(\"Error: \" + data.error);\n        } else {\n            document.getElementById('results').value = \"Cluster for customer with ID \" + customerId + \": \" + data.cluster;\n        }\n    });\n}\n\n  const handleSaveToCSV = () => {\n    // Get table data from form\n    const tableRows = document.querySelectorAll('#newCustomer tbody tr');\n    const data = Array.from(tableRows).map(row => {\n        const inputs = row.querySelectorAll('input');\n        return Array.from(inputs).map(input => input.value);\n    });\n\n    // Convert data to a format suitable for sending to server\n    const columns = ['CUST_ID', 'BALANCE', 'BALANCE_FREQUENCY', 'PURCHASES',\n                     'ONEOFF_PURCHASES', 'INSTALLMENTS_PURCHASES', 'CASH_ADVANCE',\n                     'PURCHASES_FREQUENCY', 'ONEOFF_PURCHASES_FREQUENCY',\n                     'PURCHASES_INSTALLMENTS_FREQUENCY', 'CASH_ADVANCE_FREQUENCY',\n                     'CASH_ADVANCE_TRX', 'PURCHASES_TRX', 'CREDIT_LIMIT','TENURE'];\n    const payload = data.map(row => {\n        const obj = {};\n        row.forEach((value, index) => {\n            obj[columns[index]] = value;\n        });\n        return obj;\n    });\n\n    // Send data to Flask backend\n    fetch(\"http://localhost:5000/save-csv\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload[0]),  // send the first row for simplicity\n    })\n    .then(response => response.json())\n    .then(data => {\n        // Set the received data into the textarea\n        document.getElementById('results1').value = \"Cluster for customer with ID \" + data.cust_id + \": \" + data.cluster;\n        console.log(data.message);\n    })\n    .catch((error) => {\n        console.error('Error:', error);\n    });\n}\n/*\nconst handleSaveToCSV = () => {\n    // Get table data from form\n    const tableRows = document.querySelectorAll('#newCustomer tbody tr');\n    const data = Array.from(tableRows).map(row => {\n        const inputs = row.querySelectorAll('input');\n        return Array.from(inputs).map(input => input.value);\n    });\n\n    // Convert data to a format suitable for sending to server\n    const columns = ['CUST_ID', 'BALANCE', 'BALANCE_FREQUENCY', 'PURCHASES',\n                     'ONEOFF_PURCHASES', 'INSTALLMENTS_PURCHASES', 'CASH_ADVANCE',\n                     'PURCHASES_FREQUENCY', 'ONEOFF_PURCHASES_FREQUENCY',\n                     'PURCHASES_INSTALLMENTS_FREQUENCY', 'CASH_ADVANCE_FREQUENCY',\n                     'CASH_ADVANCE_TRX', 'PURCHASES_TRX', 'CREDIT_LIMIT','TENURE'];\n    const payload = data.map(row => {\n        const obj = {};\n        row.forEach((value, index) => {\n            obj[columns[index]] = value;\n        });\n        return obj;\n    });\n\n    // Send data to Flask backend\n    fetch(\"http://localhost:5000/save-csv\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),  // send all rows\n    })\n    .then(response => response.json())\n    .then(data => {\n        // Set the received data into the textarea\n        // For simplicity, setting only the first result. \n        // If server returns multiple results, you can loop through them.\n        document.getElementById('results1').value = data.cluster;\n\n        console.log(data.message);\n    })\n    .catch((error) => {\n        console.error('Error:', error);\n    });\n}\n*/\n\n\n  return (\n    <div className=\"App\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src={process.env.PUBLIC_URL + '/images/axefinance.png'} alt=\"\" width=\"85\" height=\"45\"/>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Summary</a>\n        </li>\n        <li class=\"nav-item\">\n          <Link to='newCustomer' class=\"nav-link\" >New Customer</Link>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" onClick={() => showTab('oldCustomer')}>Old Customer</a>\n        </li>\n        \n      </ul>\n    </div>\n  </div>\n</nav>\n<Routes>\n<Route path='/' element={<NewCustomer/>}></Route>\n    <Route path='/newCustomer' element={<NewCustomer/>}></Route>\n    <Route path='/oldCustomer' element={<OldCustomer/>}></Route>\n\n</Routes>\n      {/* <div className=\"tabs\">\n        <button className=\"tab-button\" onClick={() => showTab('newCustomer')}>New Customer</button>\n        <button className=\"tab-button\" onClick={() => showTab('oldCustomer')}>Old Customer</button>\n      </div> */}\n\n     \n    <div id=\"oldCustomer\" className=\"tab-content\">\n        <label htmlFor=\"customerId\">Customer ID:</label>\n        <input type=\"text\" id=\"customerId\" />\n    <br />\n      <div>\n        <label>Results:</label>\n        <textarea readOnly id=\"results\"></textarea>\n      </div>\n    <br />\n    <div style={{textAlign: \"center\"}}>\n        <button onClick={getOldCustomerData}>Fetch Data</button>\n    </div>\n    </div>\n    </div>\n   \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}